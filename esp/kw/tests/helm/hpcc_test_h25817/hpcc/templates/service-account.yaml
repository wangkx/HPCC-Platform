# The hpcc-default service account is used by ay component that doesn't need API access to launch child jobs
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hpcc-default
---
# The hpcc-agent service account is used by any component that DOES need API access to launch child jobs
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hpcc-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hpcc-agent
rules:
  - apiGroups: [ "" ] # core API group
    resources: [ "pods" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "create", "list", "delete", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hpcc-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hpcc-agent
subjects:
  - kind: ServiceAccount
    name: hpcc-agent
    namespace: {{ .Release.Namespace }}
---
# The hpcc-thoragent service account is used by thor agent, which needs not only to launch child jobs but also to set new NetworkPolicies
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hpcc-thoragent
---
# hpcc-thoragent needs to be able to manipulate jobs AND give the resulting pods the ability to see each other
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hpcc-thoragent
rules:
  - apiGroups: [ "" ] # core API group
    resources: [ "pods" ]
    verbs: [ "get", "list", "create" ]
  - apiGroups: [ "networking.k8s.io" ]
    resources: [ "networkpolicies" ]
    verbs: [ "get", "create", "delete" ]
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "create", "list", "delete", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hpcc-thoragent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hpcc-thoragent
subjects:
  - kind: ServiceAccount
    name: hpcc-thoragent
    namespace: {{ .Release.Namespace }}
